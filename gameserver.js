/*
 *
 *	Jelda game server
 *
 */

////////////////////////////////////////////////////////////
// Required includes
////////////////////////////////////////////////////////////
var express = require('express'),
	app = express(),
	server = require('http').createServer(app),
	io = require('socket.io').listen(server);

////////////////////////////////////////////////////////////
// Routing
////////////////////////////////////////////////////////////
app.get('/', function(req, res) {
	res.sendfile(__dirname + '/client/default.html');
});

// If they're looking for static content, send that their way.
app.use(express.static(__dirname + '/client'));

////////////////////////////////////////////////////////////
// Configure socket.io for heroku
////////////////////////////////////////////////////////////
io.configure(function () { 
  io.set("transports", ["xhr-polling"]); 
  io.set("polling duration", 10); 
});

////////////////////////////////////////////////////////////
// Game server logic!
////////////////////////////////////////////////////////////
var world = io.on('connection', function(socket) {

		console.log('connected!');

		// TODO: REAL MANLY handshake
		socket.emit('mapstate', {
			Entities: [
				{
					EntityId: '1234',
					EntityType: 'playerEntity',
					EntityState: {
						X: 50,
						Y: 50,
						DisplayName: 'Player'
					}
				}
			]
		});

	});

////////////////////////////////////////////////////////////
// Configure the port
////////////////////////////////////////////////////////////
var port = process.env.PORT || 8000;

////////////////////////////////////////////////////////////
// Start the server
////////////////////////////////////////////////////////////
server.listen(port);